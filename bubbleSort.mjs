import { logArray } from './utils.mjs'

function bubbleSort(array) {
  let swapped = false
  let iterationCount = 0
  do {
    swapped = false
    for (let index = 0; index < array.length; index++) {
      logArray(array)
      iterationCount++
      const element = array[index]
      const next = array[index + 1]
      if (element > next) {
        const tmp = element
        array[index] = next
        array[index + 1] = tmp
        swapped = true
      }
    }
  } while (swapped)
  console.log(iterationCount)
}

function test() {
  bubbleSort([10, 5, 6, 3, 2, 8, 9, 4, 7, 1])
  // 10 5 6 3 2 8 9 4 7 1
  // 5 10 6 3 2 8 9 4 7 1
  // 5 6 10 3 2 8 9 4 7 1
  // 5 6 3 10 2 8 9 4 7 1
  // 5 6 3 2 10 8 9 4 7 1
  // 5 6 3 2 8 10 9 4 7 1
  // 5 6 3 2 8 9 10 4 7 1
  // 5 6 3 2 8 9 4 10 7 1
  // 5 6 3 2 8 9 4 7 10 1
  // 5 6 3 2 8 9 4 7 1 10
  // 5 6 3 2 8 9 4 7 1 10
  // 5 6 3 2 8 9 4 7 1 10
  // 5 3 6 2 8 9 4 7 1 10
  // 5 3 2 6 8 9 4 7 1 10
  // 5 3 2 6 8 9 4 7 1 10
  // 5 3 2 6 8 9 4 7 1 10
  // 5 3 2 6 8 4 9 7 1 10
  // 5 3 2 6 8 4 7 9 1 10
  // 5 3 2 6 8 4 7 1 9 10
  // 5 3 2 6 8 4 7 1 9 10
  // 5 3 2 6 8 4 7 1 9 10
  // 3 5 2 6 8 4 7 1 9 10
  // 3 2 5 6 8 4 7 1 9 10
  // 3 2 5 6 8 4 7 1 9 10
  // 3 2 5 6 8 4 7 1 9 10
  // 3 2 5 6 4 8 7 1 9 10
  // 3 2 5 6 4 7 8 1 9 10
  // 3 2 5 6 4 7 1 8 9 10
  // 3 2 5 6 4 7 1 8 9 10
  // 3 2 5 6 4 7 1 8 9 10
  // 3 2 5 6 4 7 1 8 9 10
  // 2 3 5 6 4 7 1 8 9 10
  // 2 3 5 6 4 7 1 8 9 10
  // 2 3 5 6 4 7 1 8 9 10
  // 2 3 5 4 6 7 1 8 9 10
  // 2 3 5 4 6 7 1 8 9 10
  // 2 3 5 4 6 1 7 8 9 10
  // 2 3 5 4 6 1 7 8 9 10
  // 2 3 5 4 6 1 7 8 9 10
  // 2 3 5 4 6 1 7 8 9 10
  // 2 3 5 4 6 1 7 8 9 10
  // 2 3 5 4 6 1 7 8 9 10
  // 2 3 5 4 6 1 7 8 9 10
  // 2 3 4 5 6 1 7 8 9 10
  // 2 3 4 5 6 1 7 8 9 10
  // 2 3 4 5 1 6 7 8 9 10
  // 2 3 4 5 1 6 7 8 9 10
  // 2 3 4 5 1 6 7 8 9 10
  // 2 3 4 5 1 6 7 8 9 10
  // 2 3 4 5 1 6 7 8 9 10
  // 2 3 4 5 1 6 7 8 9 10
  // 2 3 4 5 1 6 7 8 9 10
  // 2 3 4 5 1 6 7 8 9 10
  // 2 3 4 5 1 6 7 8 9 10
  // 2 3 4 1 5 6 7 8 9 10
  // 2 3 4 1 5 6 7 8 9 10
  // 2 3 4 1 5 6 7 8 9 10
  // 2 3 4 1 5 6 7 8 9 10
  // 2 3 4 1 5 6 7 8 9 10
  // 2 3 4 1 5 6 7 8 9 10
  // 2 3 4 1 5 6 7 8 9 10
  // 2 3 4 1 5 6 7 8 9 10
  // 2 3 4 1 5 6 7 8 9 10
  // 2 3 1 4 5 6 7 8 9 10
  // 2 3 1 4 5 6 7 8 9 10
  // 2 3 1 4 5 6 7 8 9 10
  // 2 3 1 4 5 6 7 8 9 10
  // 2 3 1 4 5 6 7 8 9 10
  // 2 3 1 4 5 6 7 8 9 10
  // 2 3 1 4 5 6 7 8 9 10
  // 2 3 1 4 5 6 7 8 9 10
  // 2 3 1 4 5 6 7 8 9 10
  // 2 1 3 4 5 6 7 8 9 10
  // 2 1 3 4 5 6 7 8 9 10
  // 2 1 3 4 5 6 7 8 9 10
  // 2 1 3 4 5 6 7 8 9 10
  // 2 1 3 4 5 6 7 8 9 10
  // 2 1 3 4 5 6 7 8 9 10
  // 2 1 3 4 5 6 7 8 9 10
  // 2 1 3 4 5 6 7 8 9 10
  // 2 1 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 1 2 3 4 5 6 7 8 9 10
  // 100
}

// test()

export {}
